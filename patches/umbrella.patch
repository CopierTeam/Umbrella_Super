--- tg/lua-tg.c	2016-03-17 22:21:55.993798604 +0700
+++ patches/lua-tg_merbot.c	2016-03-17 22:21:32.806638374 +0700
@@ -161,6 +161,7 @@
   my_lua_checkstack (luaState, 4);
   lua_add_string_field ("title", P->channel.title);
   lua_add_string_field ("about", P->channel.about);
+  lua_add_string_field ("username", P->channel.username);
   lua_add_num_field ("participants_count", P->channel.participants_count);
   lua_add_num_field ("admins_count", P->channel.admins_count);
   lua_add_num_field ("kicked_count", P->channel.kicked_count);
@@ -288,11 +289,24 @@
     lua_add_string_field ("caption", M->caption);
     break;
   case tgl_message_media_document:
+    lua_newtable (luaState);
+    lua_add_string_field ("type", "document");
+    lua_add_string_field ("caption", M->document->caption);
+    break;
   case tgl_message_media_audio:
+    lua_newtable (luaState);
+    lua_add_string_field ("type", "audio");
+    lua_add_string_field ("caption", M->caption);
+    break;
   case tgl_message_media_video:
+    lua_newtable (luaState);
+    lua_add_string_field ("type", "video");
+    lua_add_string_field ("caption", M->caption);
+    break;
   case tgl_message_media_document_encr:
     lua_newtable (luaState);
-    lua_add_string_field ("type", "document");
+    lua_add_string_field ("type", "encr_document");
+    lua_add_string_field ("caption", M->document->caption);
     break;
   case tgl_message_media_unsupported:
     lua_newtable (luaState);
@@ -718,7 +732,24 @@
   lq_channel_invite_user,
   lq_channel_kick_user,
   lq_channel_get_admins,
-  lq_channel_get_users
+  lq_channel_get_users,
+  lq_block_user,
+  lq_unblock_user,
+  lq_channel_set_username,
+  lq_rename_channel,
+  lq_export_channel_link,
+  lq_channel_set_about,
+  lq_channel_set_admin,
+  lq_channel_set_mod,
+  lq_channel_del_admin,
+  lq_channel_set_photo,
+  lq_chat_upgrade,
+  lq_contact_search,
+  lq_create_channel,
+  lq_get_message,
+  lq_channel_join,
+  lq_channel_leave,
+  lq_channel_list
 };
 
 struct lua_query_extra {
@@ -1138,6 +1169,38 @@
   free (cb);
 }
 
+void lua_contact_search_cb (struct tgl_state *TLSR, void *cb_extra, int success, tgl_peer_t *C) {
+  assert (TLSR == TLS);
+  struct lua_query_extra *cb = cb_extra;
+  lua_settop (luaState, 0);
+  //lua_checkstack (luaState, 20);
+  my_lua_checkstack (luaState, 20);
+
+  lua_rawgeti (luaState, LUA_REGISTRYINDEX, cb->func);
+  lua_rawgeti (luaState, LUA_REGISTRYINDEX, cb->param);
+
+  lua_pushnumber (luaState, success);
+
+  if (success) {
+    push_peer (C->id, (void *)C);
+  } else {
+    lua_pushboolean (luaState, 0);
+  }
+
+  assert (lua_gettop (luaState) == 4);
+
+  int r = ps_lua_pcall (luaState, 3, 0, 0);
+
+  luaL_unref (luaState, LUA_REGISTRYINDEX, cb->func);
+  luaL_unref (luaState, LUA_REGISTRYINDEX, cb->param);
+
+  if (r) {
+    logprintf ("lua: %s\n",  lua_tostring (luaState, -1));
+  }
+
+  free (cb);
+}
+
 #define LUA_STR_ARG(n) lua_ptr[n].str, strlen (lua_ptr[n].str)
 
 void lua_do_all (void) {
@@ -1363,6 +1426,73 @@
       tgl_do_channel_get_members (TLS, lua_ptr[p + 1].peer_id, 100, 0, 0, lua_contact_list_cb, lua_ptr[p].ptr);
       p += 2;
       break;
+    case lq_block_user:
+      tgl_do_block_user (TLS, lua_ptr[p + 1].peer_id, lua_empty_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
+    case lq_unblock_user:
+      tgl_do_unblock_user (TLS, lua_ptr[p + 1].peer_id, lua_empty_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
+    case lq_channel_set_username:
+      tgl_do_channel_set_username (TLS, lua_ptr[p + 1].peer_id, LUA_STR_ARG (p + 2), lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break;    
+    case lq_rename_channel:
+      tgl_do_rename_channel (TLS, lua_ptr[p + 1].peer_id, LUA_STR_ARG (p + 2), lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break;
+    case lq_contact_search:
+      tgl_do_contact_search (TLS, LUA_STR_ARG (p + 1), lua_contact_search_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;      
+    case lq_create_channel:
+      tgl_do_create_channel (TLS, 1, &lua_ptr[p + 1].peer_id, LUA_STR_ARG (p + 2), LUA_STR_ARG (p + 3), 1,lua_empty_cb, lua_ptr[p].ptr);
+      p += 4;
+      break;
+    case lq_get_message:
+      tgl_do_get_message (TLS, &lua_ptr[p + 1].msg_id, lua_msg_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
+    case lq_channel_set_about:
+      tgl_do_channel_set_about (TLS, lua_ptr[p + 1].peer_id, LUA_STR_ARG (p + 2), lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break;
+    case lq_channel_set_admin:
+      tgl_do_channel_set_admin (TLS, lua_ptr[p + 1].peer_id, lua_ptr[p + 2].peer_id, 2, lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break;      
+    case lq_channel_set_mod:
+      tgl_do_channel_set_admin (TLS, lua_ptr[p + 1].peer_id, lua_ptr[p + 2].peer_id, 1, lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break; 
+    case lq_channel_del_admin:
+      tgl_do_channel_set_admin (TLS, lua_ptr[p + 1].peer_id, lua_ptr[p + 2].peer_id, 0, lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break; 
+    case lq_channel_set_photo:
+      tgl_do_set_channel_photo (TLS, lua_ptr[p + 1].peer_id, lua_ptr[p + 2].str, lua_empty_cb, lua_ptr[p].ptr);
+      p += 3;
+      break;      
+    case lq_chat_upgrade:
+      tgl_do_upgrade_group (TLS, lua_ptr[p + 1].peer_id, lua_empty_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
+    case lq_export_channel_link:
+      tgl_do_export_channel_link (TLS, lua_ptr[p + 1].peer_id, lua_str_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
+    case lq_channel_list:
+      tgl_do_get_channels_dialog_list (TLS, 100, 0, lua_dialog_list_cb, lua_ptr[p ++].ptr);
+      break;
+    case lq_channel_join:
+      tgl_do_join_channel (TLS, lua_ptr[p + 1].peer_id, lua_empty_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
+    case lq_channel_leave:
+      tgl_do_leave_channel (TLS, lua_ptr[p + 1].peer_id, lua_empty_cb, lua_ptr[p].ptr);
+      p += 2;
+      break;
   /*
   lq_delete_msg,
   lq_restore_msg,
@@ -1468,6 +1598,25 @@
   {"channel_kick_user", lq_channel_kick_user, { lfp_channel, lfp_user, lfp_none }},
   {"channel_get_admins", lq_channel_get_admins, { lfp_channel, lfp_none }},
   {"channel_get_users", lq_channel_get_users, { lfp_channel, lfp_none }},
+  {"block_user", lq_block_user, { lfp_user, lfp_none }},
+  {"unblock_user", lq_unblock_user, { lfp_user, lfp_none }},
+  {"import_channel_link", lq_import_chat_link, { lfp_string, lfp_none }},
+  {"channel_set_username", lq_channel_set_username, { lfp_channel, lfp_string, lfp_none }},
+  {"rename_channel", lq_rename_channel, { lfp_channel, lfp_string, lfp_none }},
+  {"resolve_username", lq_contact_search, { lfp_string, lfp_none }},
+  {"create_channel", lq_create_channel, { lfp_peer, lfp_string, lfp_string, lfp_none }},
+  {"get_message", lq_get_message, { lfp_msg, lfp_none }},
+  {"export_channel_link", lq_export_channel_link, { lfp_channel, lfp_none }},
+  {"channel_set_admin", lq_channel_set_admin, { lfp_channel, lfp_user,lfp_none }},
+  {"channel_set_mod", lq_channel_set_mod, { lfp_channel, lfp_peer, lfp_none }},
+  {"channel_del_admin", lq_channel_del_admin, { lfp_channel, lfp_user,lfp_none }},
+  {"channel_del_mod", lq_channel_del_admin, { lfp_channel, lfp_user,lfp_none }},
+  {"channel_set_about", lq_channel_set_about, { lfp_channel, lfp_string, lfp_none }},
+  {"channel_set_photo", lq_channel_set_photo, { lfp_channel, lfp_string, lfp_none }},
+  {"chat_upgrade", lq_chat_upgrade, { lfp_peer, lfp_none }},
+  {"channel_leave", lq_channel_leave, { lfp_channel, lfp_none }},
+  {"channel_join", lq_channel_join, { lfp_channel, lfp_none }},
+  {"get_channel_list", lq_channel_list, { lfp_none }},
   { 0, 0, { lfp_none}}
 };
 
